#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)		
	ПолучитьВыбраннуюДоску();
	ОтобразитьДоску();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыбраннаяДоскаПриИзменении(Элемент)
	ОтобразитьДоску();
	СохранитьИзменениеВыбраннойДоски();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьКолонку(Команда)
	СтруктураФормы = Новый Структура;
	СтруктураФормы.Вставить("Доска", ВыбраннаяДоска);
	СтруктураФормы.Вставить("Номер", СозданныеКолонки.Количество() + 1);
	СтруктураФормы.Вставить("БезНастроек", Истина);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеВызоваКонструктора", ЭтотОбъект);

	ОткрытьФорму("Обработка.Центр_Канбан.Форма.КонструкторКолонки", СтруктураФормы, , , , , ОповещениеОЗакрытии);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачу(Команда)
	ОткрытьФорму("Документ.Центр_Задача.Форма.ФормаДокументаУпрощенная",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОтобразитьДоску();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтобразитьДоску()
	// Очистка
	ТЗКолонки = СозданныеКолонки.Выгрузить();

	МассивИменЭлементов = ТЗКолонки.ВыгрузитьКолонку("Элемент");
	МассивИменРеквизитов = ТЗКолонки.ВыгрузитьКолонку("РеквизитКолонки");

	МассивИменКоманд1 = ТЗКолонки.ВыгрузитьКолонку("КомандаНастройки");
	МассивИменКоманд2 = ТЗКолонки.ВыгрузитьКолонку("КомандаВЛево");
	МассивИменКоманд3 = ТЗКолонки.ВыгрузитьКолонку("КомандаВПраво");
	МассивИменКоманд4 = ТЗКолонки.ВыгрузитьКолонку("КомандаСкопировать");
	МассивИменКоманд5 = ТЗКолонки.ВыгрузитьКолонку("КомандаУдалить");

	Центр_ЭлементыФормы.УдлЭлементы(ЭтотОбъект, МассивИменЭлементов);
	Центр_ЭлементыФормы.УдлРеквизиты(ЭтотОбъект, МассивИменРеквизитов);

	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд1);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд2);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд3);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд4);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд5);

	СозданныеКолонки.Очистить();
	
	// Создание объектов
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_НастройкиПользователейКолонокКанБан.Номер КАК Номер,
	|	Центр_НастройкиПользователейКолонокКанБан.НастройкиКолонки,
	|	Центр_НастройкиПользователейКолонокКанБан.Наименование
	|ИЗ
	|	РегистрСведений.Центр_НастройкиПользователейКолонокКанБан КАК Центр_НастройкиПользователейКолонокКанБан
	|ГДЕ
	|	Центр_НастройкиПользователейКолонокКанБан.Доска = &Доска
	|	И Центр_НастройкиПользователейКолонокКанБан.Пользователь = &Пользователь
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";

	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());
	Запрос.УстановитьПараметр("Доска", ВыбраннаяДоска);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Запрос.УстановитьПараметр("Пользователь", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
		РезультатЗапроса = Запрос.Выполнить();
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();

	ТекстЗапросаДС = "ВЫБРАТЬ
	|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель,
	|	Центр_СтатусыЗадачСрезПоследних.Статус,
	|	Центр_Задача.Дата,
	|	Центр_Задача.Номер,
	|	Центр_Задача.Ссылка,
	|	Центр_Задача.Наименование,
	|	Центр_Задача.ОписаниеЗадачи,
	|	Центр_Задача.ВидЗадачи,
	|	Центр_Задача.Постановщик,
	|	Центр_Задача.Приоритет,
	|	Центр_Задача.Автор,
	|	Центр_Задача.ГлавнаяЗадача,
	|	Центр_Задача.УчетВремени,
	|	Центр_Задача.КонтрольВремени,
	|	Центр_Задача.Наблюдатели.(
	|		Ссылка,
	|		НомерСтроки,
	|		Пользователь),
	|	Центр_Задача.Метки.(
	|		Ссылка,
	|		НомерСтроки,
	|		Метка),
	|	Центр_Задача.МоментВремени,
	|	Центр_Задача.Представление,
	|	Центр_ПросроченныеДействияПоЗадачам.Этап КАК ПросроченоеДействие,
	|	Центр_ПросроченныеДействияПоЗадачам.Пользователь КАК ПользовательПросроченныхДействий,
	|	Центр_ДедлайнЗадачСрезПоследних.Дедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.Согласовано КАК СогласованоДедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.Отказ КАК ОтказДедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.КомментарийОтказа КАК КомментарийОтказаДедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.КомментарийОценки КАК КомментарийДедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.ПричинаПереноса КАК ПричинаПереносаДедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.Согласующий КАК СогласующийДедлайн,
	|	Центр_ДедлайнЗадачСрезПоследних.Согласовант КАК СогласовантДедлайн,
	|	Центр_ОценкаЧасовСрезПоследних.От,
	|	Центр_ОценкаЧасовСрезПоследних.До,
	|	Центр_ОценкаЧасовСрезПоследних.Длительность,
	|	Центр_ОценкаЧасовСрезПоследних.Согласовано,
	|	Центр_ОценкаЧасовСрезПоследних.Отказ,
	|	Центр_ОценкаЧасовСрезПоследних.Согласующий,
	|	Центр_ОценкаЧасовСрезПоследних.Согласовант,
	|	Центр_ОценкаЧасовСрезПоследних.ТипОценки,
	|	Центр_ОценкаЧасовСрезПоследних.КомментарийОтказа,
	|	Центр_ОценкаЧасовСрезПоследних.КомментарийОценки
	|ИЗ
	|	Документ.Центр_Задача КАК Центр_Задача
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних КАК Центр_ИсполнителиЗадачСрезПоследних
	|		ПО Центр_Задача.Ссылка = Центр_ИсполнителиЗадачСрезПоследних.Задача
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Центр_СтатусыЗадач.СрезПоследних КАК Центр_СтатусыЗадачСрезПоследних
	|		ПО Центр_Задача.Ссылка = Центр_СтатусыЗадачСрезПоследних.Задача
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Центр_ПросроченныеДействияПоЗадачам КАК Центр_ПросроченныеДействияПоЗадачам
	|		ПО Центр_ПросроченныеДействияПоЗадачам.Задача = Центр_Задача.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Центр_ДедлайнЗадач.СрезПоследних КАК Центр_ДедлайнЗадачСрезПоследних
	|		ПО Центр_ДедлайнЗадачСрезПоследних.Задача = Центр_Задача.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Центр_ОценкаЧасов.СрезПоследних КАК Центр_ОценкаЧасовСрезПоследних
	|		ПО Центр_Задача.Ссылка = Центр_ОценкаЧасовСрезПоследних.Задача";

	СтруктураКолонок = Новый Структура;
	СтруктураКолонок.Вставить("Исполнитель", "Исполнитель");
	СтруктураКолонок.Вставить("Наименование", "Наименование");

	КартинкаУдаления = БиблиотекаКартинок.Удалить;
	СвойствоКнопокУдаления = Новый Структура;
	СвойствоКнопокУдаления.Вставить("Картинка", КартинкаУдаления);
	СвойствоКнопокУдаления.Вставить("Отображение", ОтображениеКнопки.Картинка);

	КартинкаНастроек = БиблиотекаКартинок.НастроитьСостоянияОригиналаПервичногоДокумента;
	СвойствоКнопокНастройки = Новый Структура;
	СвойствоКнопокНастройки.Вставить("Картинка", КартинкаНастроек);
	СвойствоКнопокНастройки.Вставить("Отображение", ОтображениеКнопки.Картинка);

	КартинкаСкопировать = БиблиотекаКартинок.СкопироватьЭлементСписка;
	СвойствоКнопокСкопировать = Новый Структура;
	СвойствоКнопокСкопировать.Вставить("Картинка", КартинкаСкопировать);
	СвойствоКнопокСкопировать.Вставить("Отображение", ОтображениеКнопки.Картинка);

	КартинкаВЛево = БиблиотекаКартинок.ПереместитьВлево;
	СвойствоКнопокВЛево = Новый Структура;
	СвойствоКнопокВЛево.Вставить("Картинка", КартинкаВЛево);
	СвойствоКнопокВЛево.Вставить("Отображение", ОтображениеКнопки.Картинка);

	КартинкаВПраво = БиблиотекаКартинок.ПереместитьВправо;
	СвойствоКнопокВПраво = Новый Структура;
	СвойствоКнопокВПраво.Вставить("Картинка", КартинкаВПраво);
	СвойствоКнопокВПраво.Вставить("Отображение", ОтображениеКнопки.Картинка);

	СтруктураСвойствДС = Новый Структура;
	СтруктураСвойствДС.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);

	Пока Выборка.Следующий() Цикл
		Индекс = Выборка.Номер;

		НоваяСтр = СозданныеКолонки.Добавить();
		НоваяСтр.Элемент = "ГруппаКолонки" + Индекс;
		НоваяСтр.КомандаНастройки = "НастройкиКолонки" + Индекс;
		НоваяСтр.Наименование = Выборка.Наименование;
		Если СозданныеКолонки.Количество() <> 1 Тогда
			НоваяСтр.КомандаВЛево = "КолонкуВЛево" + Индекс;
		КонецЕсли;
		Если СозданныеКолонки.Количество() <> Выборка.Количество() Тогда
			НоваяСтр.КомандаВПраво = "КолонкуВПраво" + Индекс;
		КонецЕсли;
		НоваяСтр.КомандаСкопировать = "СкопироватьКолонку" + Индекс;
		НоваяСтр.РеквизитКолонки = "Колонка" + Индекс;
		НоваяСтр.КомандаУдалить = "УдалитьКолонку" + Индекс;
		
		// Общая Группа 
		ГруппаКолонки = Центр_ЭлементыФормы.СздГруппаОбычная(ЭтотОбъект, "ГруппаКолонки" + Индекс,
			Элементы.ГруппаОсновногоБлока, Выборка.Наименование, 1);
		
		// кнопки
		ГруппаКнопок = Центр_ЭлементыФормы.СздГруппаОбычнаяБезОтображения(ЭтотОбъект, "ГруппаКнопок" + Индекс,
			ГруппаКолонки);

		Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "НастройкиКолонки" + Индекс, "Настройки",
			"ОткрытьКонструкторКолонки");
		Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "СкопироватьКолонку" + Индекс, "Скопировать",
			"СкопироватьКолонку");
		Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "УдалитьКолонку" + Индекс, "Удалить",
			"УдалитьКолонку");
		Если СозданныеКолонки.Количество() <> 1 Тогда
			Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "КолонкуВЛево" + Индекс, "КолонкуВЛево",
				"КолонкуПереместитьВЛево");
		КонецЕсли;
		Если СозданныеКолонки.Количество() <> Выборка.Количество() Тогда
			Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "КолонкуВПраво" + Индекс, "КолонкуВПраво",
				"КолонкуПереместитьВПраво");
		КонецЕсли;
				
		Если СозданныеКолонки.Количество() <> 1 Тогда
		
			Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "КолонкуВЛевоКнопка" + Индекс,
				ГруппаКнопок, "КолонкуВЛево", "КолонкуВЛево" + Индекс, , СвойствоКнопокВЛево);
		КонецЕсли;

		Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "НастройкиКолонкиКнопка" + Индекс,
			ГруппаКнопок, "Настройки", "НастройкиКолонки" + Индекс, , СвойствоКнопокНастройки);
		
		Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "СкопироватьКолонкуКнопка" + Индекс,
			ГруппаКнопок, "Скопировать", "СкопироватьКолонку" + Индекс, , СвойствоКнопокСкопировать);
		 Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "УдалитьКолонкуКнопка" + Индекс,
			ГруппаКнопок, "Удалить", "УдалитьКолонку" + Индекс, , СвойствоКнопокУдаления);
		Если СозданныеКолонки.Количество() <> Выборка.Количество() Тогда
			
			Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "КолонкуВПравоКнопка" + Индекс,
				ГруппаКнопок, "КолонкуВПраво", "КолонкуВПраво" + Индекс, , СвойствоКнопокВПраво);
		КонецЕсли;		
		// Таблица	
		Центр_ЭлементыФормы.СздДинамическийСписок(ЭтотОбъект, "Колонка" + Индекс, ГруппаКолонки,
			ТекстЗапросаДС, , "Документ.Центр_Задача", СтруктураКолонок, СтруктураСвойствДС);

		ЭтотОбъект["Колонка" + Индекс].КомпоновщикНастроек.ЗагрузитьНастройки(Выборка.НастройкиКолонки.Получить());
		
		ИзменитьЗаголовокГруппыДС("Колонка" + Индекс);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторКолонки(Команда) Экспорт
	ПроверитьКолонкиПользователя();
	СтруктураФормы =  СтруктураФормыКонструктора(Команда.Имя);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеВызоваКонструктора", ЭтотОбъект);
	ОткрытьФорму("Обработка.Центр_Канбан.Форма.КонструкторКолонки", СтруктураФормы, , , , , ОповещениеОЗакрытии);

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьКолонку(Команда) Экспорт
	ПроверитьКолонкиПользователя();
	СкопироватьКолонкуНаСервере(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКолонку(Команда) Экспорт
	ПроверитьКолонкиПользователя();
	Номер = Число(СтрЗаменить(Команда.Имя, "УдалитьКолонку", ""));
	УдалитьКолонкуНаСервере(Номер);
КонецПроцедуры

&НаКлиенте
Процедура КолонкуПереместитьВЛево(Команда) Экспорт
	ПроверитьКолонкиПользователя();
	Номер = Число(СтрЗаменить(Команда.Имя, "КолонкуВЛево", ""));
	ПоменятьМестамиКолонки(Номер, -1);
КонецПроцедуры

&НаКлиенте
Процедура КолонкуПереместитьВПраво(Команда) Экспорт
	ПроверитьКолонкиПользователя();
	Номер = Число(СтрЗаменить(Команда.Имя, "КолонкуВПраво", ""));
	ПоменятьМестамиКолонки(Номер, 1);
КонецПроцедуры

&НаСервере
Процедура ПроверитьКолонкиПользователя()
	Пользователь = Пользователи.АвторизованныйПользователь();

	Набор = РегистрыСведений.Центр_НастройкиПользователейКолонокКанБан.СоздатьНаборЗаписей();
	Набор.Отбор.Доска.Установить(ВыбраннаяДоска);
	Набор.Отбор.Пользователь.Установить(Пользователь);
	Набор.Прочитать();

	Если Не Набор.Количество() Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Центр_НастройкиПользователейКолонокКанБан.Номер,
		|	Центр_НастройкиПользователейКолонокКанБан.НастройкиКолонки,
		|	Центр_НастройкиПользователейКолонокКанБан.Наименование
		|ИЗ
		|	РегистрСведений.Центр_НастройкиПользователейКолонокКанБан КАК Центр_НастройкиПользователейКолонокКанБан
		|ГДЕ
		|	Центр_НастройкиПользователейКолонокКанБан.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И Центр_НастройкиПользователейКолонокКанБан.Доска = &Доска";

		Запрос.УстановитьПараметр("Доска", ВыбраннаяДоска);

		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл
			Запись = Набор.Добавить();
			Запись.Доска = ВыбраннаяДоска;
			Запись.Пользователь = Пользователь;
			Запись.Наименование = Выборка.Наименование;
			Запись.Номер = Выборка.Номер;
			Запись.НастройкиКолонки = Выборка.НастройкиКолонки;
		КонецЦикла;

	КонецЕсли;

	Набор.Записать();
КонецПроцедуры

&НаСервере
Процедура ПоменятьМестамиКолонки(Номер, ДвижениеНомера)
	Запись1 = Неопределено;
	Запись2 = Неопределено;
	Пользователь = Пользователи.АвторизованныйПользователь();
	Набор = РегистрыСведений.Центр_НастройкиПользователейКолонокКанБан.СоздатьНаборЗаписей();
	Набор.Отбор.Доска.Установить(ВыбраннаяДоска);
	Набор.Отбор.Пользователь.Установить(Пользователь);
	Набор.Прочитать();

	Для Каждого Запись Из Набор Цикл
		Если Запись.Номер = Номер Тогда
			Запись1 = Запись;
		КонецЕсли;
		Если Запись.Номер = Номер + ДвижениеНомера Тогда
			Запись2 = Запись;
		КонецЕсли;
	КонецЦикла;

	Набор.Удалить(Запись1);
	Набор.Удалить(Запись2);

	НоваяЗапись1 = Набор.Добавить();
	НоваяЗапись1.Пользователь = Пользователь;
	НоваяЗапись1.Доска = ВыбраннаяДоска;
	НоваяЗапись1.Наименование = Запись1.Наименование;
	НоваяЗапись1.НастройкиКолонки = Запись1.НастройкиКолонки;
	НоваяЗапись1.Номер = Запись2.Номер;

	НоваяЗапись2 = Набор.Добавить();
	НоваяЗапись2.Пользователь = Пользователь;
	НоваяЗапись2.Доска = ВыбраннаяДоска;
	НоваяЗапись2.Наименование = Запись2.Наименование;
	НоваяЗапись2.НастройкиКолонки = Запись2.НастройкиКолонки;
	НоваяЗапись2.Номер = Запись1.Номер;

	Набор.Записать();

	ОтобразитьДоску();
КонецПроцедуры

&НаСервере
Процедура УдалитьКолонкуНаСервере(Номер)
	
	ЗаписьУдаления = Неопределено;
	Набор = РегистрыСведений.Центр_НастройкиПользователейКолонокКанБан.СоздатьНаборЗаписей();
	Набор.Отбор.Доска.Установить(ВыбраннаяДоска);
	Набор.Отбор.Пользователь.Установить(Пользователи.АвторизованныйПользователь());
	Набор.Прочитать();
	
	Для Каждого Запись Из Набор Цикл
		Если Запись.Номер >= Номер + 1 Тогда
			Запись.Номер = Запись.Номер - 1;
		КонецЕсли;
		Если Запись.Номер = Номер  Тогда
			ЗаписьУдаления = Запись;
		КонецЕсли;
	КонецЦикла;

	Набор.Удалить(ЗаписьУдаления);
	
	Набор.Записать();

	ОтобразитьДоску();
КонецПроцедуры

&НаСервере
Процедура СкопироватьКолонкуНаСервере(КомандаИмя)
	Номер = Число(СтрЗаменить(КомандаИмя, "СкопироватьКолонку", ""));
	ИмяКолонки = "Колонка" + Номер;
	МассивСтрок = СозданныеКолонки.НайтиСтроки(Новый структура("КомандаСкопировать", КомандаИмя));

	Набор = РегистрыСведений.Центр_НастройкиПользователейКолонокКанБан.СоздатьНаборЗаписей();
	Набор.Отбор.Доска.Установить(ВыбраннаяДоска);
	Набор.Отбор.Пользователь.Установить(Пользователи.АвторизованныйПользователь());
	Набор.Прочитать();
	Для Каждого Запись Из Набор Цикл
		Если Запись.Номер >= Номер + 1 Тогда
			Запись.Номер = Запись.Номер + 1;
		КонецЕсли;
	КонецЦикла;

	НоваяЗапись = Набор.Добавить();
	НоваяЗапись.Пользователь = Пользователи.АвторизованныйПользователь();
	НоваяЗапись.Доска = ВыбраннаяДоска;
	НоваяЗапись.Номер =  Номер + 1;
	НоваяЗапись.Наименование = МассивСтрок[0].Наименование;
	НоваяЗапись.НастройкиКолонки = Новый ХранилищеЗначения(ЭтотОбъект[ИмяКолонки].КомпоновщикНастроек.ПолучитьНастройки());
	Набор.Записать();

	ОтобразитьДоску();
КонецПроцедуры

&НаСервере
Функция СтруктураФормыКонструктора(КомандаИмя)
	ИмяКолонки = "Колонка" + СтрЗаменить(КомандаИмя, "НастройкиКолонки", "");
	МассивСтрок = СозданныеКолонки.НайтиСтроки(Новый структура("КомандаНастройки", КомандаИмя));
	СтруктураФормы = Новый Структура;
	СтруктураФормы.Вставить("Доска", ВыбраннаяДоска);
	СтруктураФормы.Вставить("Наименование", МассивСтрок[0].Наименование);
	СтруктураФормы.Вставить("Номер", Число(СтрЗаменить(КомандаИмя, "НастройкиКолонки", "")));
	НовыйКНДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	НовыйКНДанных.ЗагрузитьНастройки(ЭтотОбъект[ИмяКолонки].КомпоновщикНастроек.ПолучитьНастройки());
	СтруктураФормы.Вставить("НастройкиКолонки", НовыйКНДанных);
	Возврат СтруктураФормы;
КонецФункции

&НаСервере
Процедура ПолучитьВыбраннуюДоску()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_НастройкиПользователяКанБан.Доска
	|ПОМЕСТИТЬ вт_ДанныеРегистра
	|ИЗ
	|	РегистрСведений.Центр_НастройкиПользователяКанБан КАК Центр_НастройкиПользователяКанБан
	|ГДЕ
	|	Центр_НастройкиПользователяКанБан.Пользователь = &Пользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Центр_Доски.Ссылка,
	|	вт_ДанныеРегистра.Доска
	|ИЗ
	|	вт_ДанныеРегистра КАК вт_ДанныеРегистра
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Центр_Доски КАК Центр_Доски
	|		ПО ИСТИНА
	|ГДЕ
	|	Центр_Доски.ДоскаПоУмолчанию";

	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.Доска) Тогда
			ВыбраннаяДоска = Выборка.Доска;
		ИначеЕсли ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			ВыбраннаяДоска = Выборка.Ссылка;
		Иначе
			ВыбраннаяДоска = Неопределено;
		КонецЕсли;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ВыбраннаяДоска) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Центр_НастройкиПользователейКолонокКанБан.Доска
		|ИЗ
		|	РегистрСведений.Центр_НастройкиПользователейКолонокКанБан КАК Центр_НастройкиПользователейКолонокКанБан
		|ГДЕ
		|	Центр_НастройкиПользователейКолонокКанБан.Пользователь = &Пользователь";
		Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());

		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Запрос.УстановитьПараметр("Пользователь", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
			РезультатЗапроса = Запрос.Выполнить();
		КонецЕсли;
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ВыбраннаяДоска = Выборка.Доска;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьИзменениеВыбраннойДоски()
	Набор = РегистрыСведений.Центр_НастройкиПользователяКанБан.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(Пользователи.АвторизованныйПользователь());
	Набор.Прочитать();
	Если Набор.Количество() Тогда
		Запись = Набор[0];
		Запись.Доска = ВыбраннаяДоска;
	Иначе
		Запись = Набор.Добавить();
		Запись.Пользователь = Пользователи.АвторизованныйПользователь();
		Запись.Доска = ВыбраннаяДоска;
	КонецЕсли;
	Набор.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПослеВызоваКонструктора(Результат, ДополнительныеПараметры) Экспорт
	ОтобразитьДоску();
КонецПроцедуры

&НаСервере
Функция КоличествоСтрокДС(ИмяРеквизита)
	Схема = Элементы[ИмяРеквизита].ПолучитьИсполняемуюСхемуКомпоновкиДанных();

	Настройки = Элементы[ИмяРеквизита].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат  Результат.Количество();
КонецФункции

&НаСервере
Процедура ИзменитьЗаголовокГруппыДС(ИмяРеквизита)
	КоличествоСтрок = КоличествоСтрокДС(ИмяРеквизита);
	
	ГруппаСписка = Элементы["ГруппаКолонки" + СтрЗаменить(ИмяРеквизита, "Колонка", "")];
	СтарыйЗаголовок = ГруппаСписка.Заголовок;
	НовыйЗаголовок = СтрРазделить(СтарыйЗаголовок, " ")[0] + " (" + Строка(КоличествоСтрок) + ")";
	ГруппаСписка.Заголовок = НовыйЗаголовок;
КонецПроцедуры
#КонецОбласти