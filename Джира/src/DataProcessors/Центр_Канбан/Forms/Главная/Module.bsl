#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьВыбраннуюДоску();
	ОтобразитьДоску();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыбраннаяДоскаПриИзменении(Элемент)
	ОтобразитьДоску();
	СохранитьИзменениеВыбраннойДоски();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьКолонку(Команда)
	СтруктураФормы = Новый Структура;
	СтруктураФормы.Вставить("Доска", ВыбраннаяДоска);
	СтруктураФормы.Вставить("Номер", СозданныеКолонки.Количество()+1);
	НовыыйКНДанных = новый КомпоновщикНастроекКомпоновкиДанных();
	СтруктураФормы.Вставить("НастройкиКолонки", НовыыйКНДанных);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеВызоваКонструктора", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.Центр_Канбан.Форма.КонструкторКолонки", СтруктураФормы,,,,,ОповещениеОЗакрытии);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтобразитьДоску()
	//Очистка
	ТЗКолонки = СозданныеКолонки.Выгрузить();
		
	МассивИменЭлементов = ТЗКолонки.ВыгрузитьКолонку("Элемент");
	МассивИменРеквизитов = ТЗКолонки.ВыгрузитьКолонку("РеквизитКолонки");
	
	МассивИменКоманд1 = ТЗКолонки.ВыгрузитьКолонку("КомандаНастройки");
	МассивИменКоманд2= ТЗКолонки.ВыгрузитьКолонку("КомандаВЛево");
	МассивИменКоманд3 = ТЗКолонки.ВыгрузитьКолонку("КомандаВПраво");
	МассивИменКоманд4 = ТЗКолонки.ВыгрузитьКолонку("КомандаСкопировать");
	
	Центр_ЭлементыФормы.УдлЭлементы(ЭтотОбъект, МассивИменЭлементов);
	Центр_ЭлементыФормы.УдлРеквизиты(ЭтотОбъект, МассивИменРеквизитов);
	
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд1);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд2);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд3);
	Центр_ЭлементыФормы.УдлКоманды(ЭтотОбъект, МассивИменКоманд4);
	
	СозданныеКолонки.Очистить();
	
	//создание объектов
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_НастройкиПользователейКолонокКанБан.Номер КАК Номер,
	|	Центр_НастройкиПользователейКолонокКанБан.НастройкиКолонки,
	|	Центр_НастройкиПользователейКолонокКанБан.Наименование
	|ИЗ
	|	РегистрСведений.Центр_НастройкиПользователейКолонокКанБан КАК Центр_НастройкиПользователейКолонокКанБан
	|ГДЕ
	|	Центр_НастройкиПользователейКолонокКанБан.Доска = &Доска
	|	И Центр_НастройкиПользователейКолонокКанБан.Пользователь = &Пользователь
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";

	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());
	Запрос.УстановитьПараметр("Доска", ВыбраннаяДоска);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Запрос.УстановитьПараметр("Пользователь", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
		РезультатЗапроса = Запрос.Выполнить();
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();

	ТекстЗапросаДС = "ВЫБРАТЬ
					 |	Центр_Задача.Ссылка,
					 |	Центр_Задача.ВерсияДанных,
					 |	Центр_Задача.ПометкаУдаления,
					 |	Центр_Задача.Номер,
					 |	Центр_Задача.Дата,
					 |	Центр_Задача.Проведен,
					 |	Центр_Задача.Наименование,
					 |	Центр_Задача.ОписаниеЗадачи,
					 |	Центр_Задача.ВидЗадачи,
					 |	Центр_Задача.Постановщик,
					 |	Центр_Задача.Дедлайн,
					 |	Центр_Задача.Длительность,
					 |	Центр_Задача.Приоритет,
					 |	Центр_Задача.Автор,
					 |	Центр_Задача.ГлавнаяЗадача,
					 |	Центр_Задача.Наблюдатели.(
					 |		Ссылка,
					 |		НомерСтроки,
					 |		Пользовалель),
					 |	Центр_Задача.Кандидаты.(
					 |		Ссылка,
					 |		НомерСтроки,
					 |		Кандидат)
					 |ИЗ
					 |	Документ.Центр_Задача КАК Центр_Задача";

	СтруктураКолонок = Новый Структура;
	СтруктураКолонок.Вставить("Ссылка", "Ссылка");
	СтруктураКолонок.Вставить("Наименование", "Наименование");

	КартинкаНастроек = БиблиотекаКартинок.НастроитьСостоянияОригиналаПервичногоДокумента;
	СвойствоКнопокНастройки = Новый Структура;
	СвойствоКнопокНастройки.Вставить("Картинка", КартинкаНастроек);
	СвойствоКнопокНастройки.Вставить("Отображение", ОтображениеКнопки.Картинка);

	КартинкаСкопировать = БиблиотекаКартинок.СкопироватьЭлементСписка;
	СвойствоКнопокСкопировать = Новый Структура;
	СвойствоКнопокСкопировать.Вставить("Картинка", КартинкаСкопировать);
	СвойствоКнопокСкопировать.Вставить("Отображение", ОтображениеКнопки.Картинка);
	
	КартинкаВЛево = БиблиотекаКартинок.ПереместитьВлево;
	СвойствоКнопокВЛево = Новый Структура;
	СвойствоКнопокВЛево.Вставить("Картинка", КартинкаВЛево);
	СвойствоКнопокВЛево.Вставить("Отображение", ОтображениеКнопки.Картинка);
	
	КартинкаВПраво = БиблиотекаКартинок.ПереместитьВправо;
	СвойствоКнопокВПраво = Новый Структура;
	СвойствоКнопокВПраво.Вставить("Картинка", КартинкаВПраво);
	СвойствоКнопокВПраво.Вставить("Отображение", ОтображениеКнопки.Картинка);
	
	СтруктураСвойствДС = Новый Структура;
	СтруктураСвойствДС.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
	СтруктураСвойствДС.Вставить("ТолькоПросмотр", Истина);

	Пока Выборка.Следующий() Цикл
		Индекс = Выборка.Номер;

		НоваяСтр = СозданныеКолонки.Добавить();
		НоваяСтр.Элемент = "ГруппаКолонки" + Индекс;
		НоваяСтр.КомандаНастройки = "НастройкиКолонки" + Индекс;
		НоваяСтр.Наименование = Выборка.Наименование;
		Если СозданныеКолонки.Количество() <> 1 Тогда
			НоваяСтр.КомандаВЛево = "КолонкуВЛево" + Индекс;
		КонецЕсли;
		Если СозданныеКолонки.Количество() <> Выборка.Количество() Тогда
			НоваяСтр.КомандаВПраво = "КолонкуВПраво" + Индекс;
		КонецЕсли;
		НоваяСтр.КомандаСкопировать = "СкопироватьКолонку" + Индекс;
		НоваяСтр.РеквизитКолонки = "Колонка" + Индекс;
		
		// Общая Группа 
		ГруппаКолонки = Центр_ЭлементыФормы.СздГруппаОбычная(ЭтотОбъект, "ГруппаКолонки" + Индекс,
			Элементы.ГруппаОсновногоБлока, Выборка.Наименование, 1);
		
		// кнопки
		ГруппаКонопок = Центр_ЭлементыФормы.СздГруппаОбычнаяБезОтображения(ЭтотОбъект, "ГруппаКнопок" + Индекс,
			ГруппаКолонки);

		Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "НастройкиКолонки" + Индекс, "Настройки",
			"ОткрытьКонструкторКолонки");
		Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "СкопироватьКолонку" + Индекс, "Скопировать",
			"СкопироватьКолонку");

		Если СозданныеКолонки.Количество() <> 1 Тогда
			Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "КолонкуВЛево" + Индекс, "КолонкуВЛево",
				"КолонкуПереместитьВЛево");
		КонецЕсли;
		Если СозданныеКолонки.Количество() <> Выборка.Количество() Тогда
			Центр_ЭлементыФормы.СоздатьКоманду(ЭтотОбъект, "КолонкуВПраво" + Индекс, "КолонкуВПраво",
				"КолонкуПереместитьВПраво");
		КонецЕсли;
		Если СозданныеКолонки.Количество() <> 1 Тогда
			КонпкаВЛевоКолонки = Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "КолонкуВЛевоКнопка" + Индекс,
				ГруппаКонопок, "КолонкуВЛево", "КолонкуВЛево" + Индекс, , СвойствоКнопокВЛево);
		КонецЕсли;

		КонпкаНстроекКолонки = Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "НастройкиКолонкиКнопка" + Индекс,
			ГруппаКонопок, "Настройки", "НастройкиКолонки" + Индекс, , СвойствоКнопокНастройки);
		КонпкаСкопироватьКолонки = Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "СкопироватьКолонкуКнопка" + Индекс,
			ГруппаКонопок, "Скопировать", "СкопироватьКолонку" + Индекс, , СвойствоКнопокСкопировать);
		Если СозданныеКолонки.Количество() <> Выборка.Количество() Тогда
			КонпкаВПравоКолонки = Центр_ЭлементыФормы.СздКнопка(ЭтотОбъект, "КолонкуВПравоКнопка" + Индекс,
				ГруппаКонопок, "КолонкуВПраво", "КолонкуВПраво" + Индекс, , СвойствоКнопокВПраво);
		КонецЕсли;		
		//Таблица	
		ТаблицаДСКолонки = Центр_ЭлементыФормы.СздДинамическийСписок(ЭтотОбъект, "Колонка" + Индекс, ГруппаКолонки,
			ТекстЗапросаДС, , "Документ.Центр_Задача", СтруктураКолонок, СтруктураСвойствДС, , , );

		ЭтотОбъект["Колонка" + Индекс].КомпоновщикНастроек.ЗагрузитьНастройки(Выборка.НастройкиКолонки.Получить());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторКолонки(Команда) Экспорт	
	СтруктураФормы =  СтруктураФормыКонструктора(Команда.Имя);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеВызоваКонструктора", ЭтотОбъект);
	ОткрытьФорму("Обработка.Центр_Канбан.Форма.КонструкторКолонки", СтруктураФормы,,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьКолонку(Команда) Экспорт
	ИмяКолонки = "Колонка" + Число(СтрЗаменить(Команда, "НастройкиКолонки", ""));
КонецПроцедуры

&НаКлиенте
Процедура КолонкуПереместитьВЛево(Команда) Экспорт
	ИмяКолонки = "Колонка" + Число(СтрЗаменить(Команда, "НастройкиКолонки", ""));
КонецПроцедуры

&НаКлиенте
Процедура КолонкуПереместитьВПраво(Команда) Экспорт
	ИмяКолонки = "Колонка" + Число(СтрЗаменить(Команда, "НастройкиКолонки", ""));
КонецПроцедуры


&НаСервере
Функция СтруктураФормыКонструктора(КомандаИмя)
	ИмяКолонки = "Колонка" + СтрЗаменить(КомандаИмя, "НастройкиКолонки", "");
	МассивСтрок = СозданныеКолонки.НайтиСтроки(новый структура("КомандаНастройки",КомандаИмя));
	СтруктураФормы = Новый Структура;
	СтруктураФормы.Вставить("Доска", ВыбраннаяДоска);
	СтруктураФормы.Вставить("Наименование", МассивСтрок[0].Наименование);
	СтруктураФормы.Вставить("Номер", Число(СтрЗаменить(КомандаИмя, "НастройкиКолонки", "")));
	НовыыйКНДанных = новый КомпоновщикНастроекКомпоновкиДанных();
	НовыыйКНДанных.ЗагрузитьНастройки(ЭтотОбъект[ИмяКолонки].КомпоновщикНастроек.ПолучитьНастройки());
	СтруктураФормы.Вставить("НастройкиКолонки", НовыыйКНДанных);
	возврат СтруктураФормы;
КонецФункции

&НаСервере
Процедура ПолучитьВыбраннуюДоску()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_НастройкиПользователяКанБан.Доска
	|ИЗ
	|	РегистрСведений.Центр_НастройкиПользователяКанБан КАК Центр_НастройкиПользователяКанБан
	|ГДЕ
	|	Центр_НастройкиПользователяКанБан.Пользователь = &Пользователь";

	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Если Выборка.Следующий() Тогда
		ВыбраннаяДоска = Выборка.Доска;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ВыбраннаяДоска) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Центр_НастройкиПользователейКолонокКанБан.Доска
		|ИЗ
		|	РегистрСведений.Центр_НастройкиПользователейКолонокКанБан КАК Центр_НастройкиПользователейКолонокКанБан
		|ГДЕ
		|	Центр_НастройкиПользователейКолонокКанБан.Пользователь = &Пользователь";
		Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());

		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Запрос.УстановитьПараметр("Пользователь", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
			РезультатЗапроса = Запрос.Выполнить();
		КонецЕсли;
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ВыбраннаяДоска = Выборка.Доска;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьИзменениеВыбраннойДоски()
	Набор = РегистрыСведений.Центр_НастройкиПользователяКанБан.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(Пользователи.АвторизованныйПользователь());
	Набор.Прочитать();
	Если Набор.Количество() Тогда
		Запись = Набор[0];
		Запись.Доска = ВыбраннаяДоска;
	Иначе
		Запись = Набор.Добавить();
		Запись.Пользователь = Пользователи.АвторизованныйПользователь();
		Запись.Доска = ВыбраннаяДоска;
	КонецЕсли;
	Набор.Записать();
КонецПроцедуры



&НаКлиенте
Процедура ПослеВызоваКонструктора(Результат, ДополнительныеПараметры) Экспорт
	ОтобразитьДоску();
КонецПроцедуры

#КонецОбласти