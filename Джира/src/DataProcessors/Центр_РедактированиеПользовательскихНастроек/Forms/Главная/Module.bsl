#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ВыбранныйПользователь", ВыбранныйПользователь) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = "Настройки пользователя (" + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранныйПользователь, "Наименование") + ")";
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Центр_ВидыПользовательскихНастроек.Ссылка,
			|	Центр_ВидыПользовательскихНастроек.Родитель,
			|	Центр_ВидыПользовательскихНастроек.ЭтоГруппа
			|ПОМЕСТИТЬ вт_ВсеНастройки
			|ИЗ
			|	ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек КАК Центр_ВидыПользовательскихНастроек
			|ГДЕ
			|	НЕ Центр_ВидыПользовательскихНастроек.ЭтоГруппа
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	вт_ВсеНастройки.Ссылка,
			|	Центр_ПользовательскиеНастройки.Значение,
			|	вт_ВсеНастройки.Родитель КАК Родитель,
			|	вт_ВсеНастройки.ЭтоГруппа
			|ИЗ
			|	вт_ВсеНастройки КАК вт_ВсеНастройки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Центр_ПользовательскиеНастройки КАК Центр_ПользовательскиеНастройки
			|		ПО вт_ВсеНастройки.Ссылка = Центр_ПользовательскиеНастройки.ВидНастройки
			|		И Центр_ПользовательскиеНастройки.Пользователь = &Пользователь
			|ИТОГИ
			|ПО
			|	Родитель";
		
		Запрос.УстановитьПараметр("Пользователь", ВыбранныйПользователь);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ДеревоНаст = РеквизитФОрмыВЗначение("ДеревоНастроек");
		
		ВыборкаРодитель = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаРодитель.Следующий() Цикл
			НоваяГруппаНастроек = ДеревоНаст.Строки.Добавить();
			НоваяГруппаНастроек.Настройка = ВыборкаРодитель.Родитель;
			НоваяГруппаНастроек.ЭтоГруппа = Истина;
			Выборка = ВыборкаРодитель.Выбрать();
				
			Пока Выборка.Следующий() Цикл
				НоваяНастройка = НоваяГруппаНастроек.Строки.Добавить();
				НоваяНастройка.Настройка = Выборка.Ссылка;
				НоваяНастройка.Значение = Выборка.Значение;
				НоваяНастройка.ЭтоГруппа = Выборка.ЭтоГруппа;
			КонецЦикла;
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ДеревоНаст, "ДеревоНастроек");
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоНастроек
&НаКлиенте
Процедура ДеревоНастроекЗначениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТекущиеДанные.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.Постановщик") Тогда
		НастройкаВида = НастройкаДереваПоЗначению(ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.ВидЗадачи"), "Партнер");
		Если НастройкаВида <> Неопределено И НастройкаВида И ЗначениеЗаполнено(ТекущиеДанные.Значение) И ТипЗнч(ТекущиеДанные.Значение) = Тип("СправочникСсылка.Пользователи") Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Постановщиком выбранного вида задачи не может быть пользователь");
		КонецЕсли;	
		
		Если НастройкаВида <> Неопределено И Не НастройкаВида И ЗначениеЗаполнено(ТекущиеДанные.Значение) И ТипЗнч(ТекущиеДанные.Значение) = Тип("СправочникСсылка.Центр_Партнеры") Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Постановщиком выбранного вида задачи не может быть партнер");
		КонецЕсли;	
	КонецЕсли;
	
	Если ТекущиеДанные.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.ВидЗадачи") Тогда
		НастройкаВида = НастройкаДереваПоЗначению(ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.Постановщик"), "Ссылка");
		
		НуженПартнер = ЗначениеРеквизитаОбъекта(ТекущиеДанные.Значение, "Партнер");
		Если НуженПартнер <> Неопределено И НуженПартнер И ТипЗнч(НастройкаВида) = Тип("СправочникСсылка.Пользователи") Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Данный вид задачи несовместим с постановщиком-пользователем");
		КонецЕсли;	
		
		Если НуженПартнер <> Неопределено И Не НуженПартнер И ТипЗнч(НастройкаВида) = Тип("СправочникСсылка.Центр_Партнеры") Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Данный вид задачи несовместим с постановщиком-партнером");
		КонецЕсли;	
		
		НастройкаКонтроля = НастройкаДереваПоЗначению(ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.КонтрольВремени"));
		Если ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
			НастройкаВида = ЗначениеРеквизитаОбъекта(ТекущиеДанные.Значение, "КонтрольВремени");
			Если НастройкаКонтроля <> Неопределено И Не НастройкаКонтроля И ЗначениеЗаполнено(НастройкаВида) И НастройкаВида Тогда
				//ТекущиеДанные.Значение = Неопределено;
				СообщитьТекст("Контроль времени обязателен для выбранного вида задач");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущиеДанные.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.КонтрольВремени") Тогда
		НастройкаКонтроля = НастройкаДереваПоЗначению(ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.ВидЗадачи"), "КонтрольВремени");
		Если НастройкаКонтроля <> Неопределено И НастройкаКонтроля И ЗначениеЗаполнено(ТекущиеДанные.Значение) И Не ТекущиеДанные.Значение Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Контроль времени обязателен для выбранного вида задач");
		КонецЕсли;	
		
		НастройкаУчета = НастройкаДереваПоЗначению(ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.УчетВремени"));
		Если НастройкаУчета <> Неопределено И Не НастройкаУчета И ЗначениеЗаполнено(ТекущиеДанные.Значение) И ТекущиеДанные.Значение Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Учет времени обязателен при включенном контроле");
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущиеДанные.Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.УчетВремени") Тогда
		НастройкаКонтроля = НастройкаДереваПоЗначению(ПредопределенноеЗначение("ПланВидовХарактеристик.Центр_ВидыПользовательскихНастроек.КонтрольВремени"));
		Если НастройкаКонтроля <> Неопределено И НастройкаКонтроля И ЗначениеЗаполнено(ТекущиеДанные.Значение) И Не ТекущиеДанные.Значение Тогда
			//ТекущиеДанные.Значение = Неопределено;
			СообщитьТекст("Учет времени обязателен при включенном контроле");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиНаСервере();
	Закрыть();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция ЗначениеРеквизитаОбъекта(ОбъектСсылка, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектСсылка, ИмяРеквизита);
КонецФункции

&НаКлиенте
Процедура СообщитьТекст(ТекстСообщения)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
КонецПроцедуры

&НаСервере
Функция НастройкаДереваПоЗначению(ЗначениеНастройки, ПолеНастройки = Неопределено)
	ДеревоНаст = РеквизитФОрмыВЗначение("ДеревоНастроек");
	ЗначениеНастройки = ДеревоНаст.Строки.Найти(ЗначениеНастройки, "Настройка", Истина).Значение;
	
	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		Если ПолеНастройки = Неопределено Тогда
			Возврат ЗначениеНастройки;
		Иначе
			Возврат ЗначениеНастройки[ПолеНастройки];
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	ДеревоНаст = РеквизитФормыВЗначение("ДеревоНастроек");
	Набор = РегистрыСведений.Центр_ПользовательскиеНастройки.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(ВыбранныйПользователь);
	Набор.Прочитать();
	Набор.Очистить();
	
	Для Каждого СтрокаДерева Из ДеревоНаст.Строки Цикл
		РекурсивноеЗаполнениеНабора(СтрокаДерева, Набор);
	КонецЦикла;
	
	Набор.Записать();
КонецПроцедуры

&НаСервере
Процедура РекурсивноеЗаполнениеНабора(СтрокаДерева, Набор)
	Если СтрокаДерева.Строки.Количество() = 0 Тогда
		Если Не СтрокаДерева.ЭтоГруппа Тогда
			Запись = Набор.Добавить();
			Запись.Пользователь = ВыбранныйПользователь;
			Запись.ВидНастройки = СтрокаДерева.Настройка;
			Запись.Значение = СтрокаДерева.Значение;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из СтрокаДерева.Строки Цикл
		РекурсивноеЗаполнениеНабора(Строка, Набор);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

