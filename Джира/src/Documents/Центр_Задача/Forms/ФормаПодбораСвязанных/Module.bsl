#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОсновнаяЗадача = Неопределено;
	Если Параметры.Свойство("ОсновнаяЗадача", ОсновнаяЗадача) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОсновнаяЗадача", ОсновнаяЗадача);
	
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Центр_СвязанныеЗадачи.Задача2 КАК Задача
			|ИЗ
			|	РегистрСведений.Центр_СвязанныеЗадачи КАК Центр_СвязанныеЗадачи
			|ГДЕ
			|	Центр_СвязанныеЗадачи.Задача1 = &ОсновнаяЗадача
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Центр_СвязанныеЗадачи.Задача1
			|ИЗ
			|	РегистрСведений.Центр_СвязанныеЗадачи КАК Центр_СвязанныеЗадачи
			|ГДЕ
			|	Центр_СвязанныеЗадачи.Задача2 = &ОсновнаяЗадача";
		
		Запрос.УстановитьПараметр("ОсновнаяЗадача", ОсновнаяЗадача);
		СписокСвязанных = Запрос.Выполнить().Выгрузить();
		
		МассивЗадач = Новый Массив();
		Для Каждого Строка Из СписокСвязанных Цикл
			МассивЗадач.Добавить(Строка.Задача);
		КонецЦикла;
		
		Список.Параметры.УстановитьЗначениеПараметра("СписокЗадач", МассивЗадач);

		СвязанныеЗадачи.Загрузить(СписокСвязанных);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПрименитьИзмениения(Команда)
	ПрименитьИзмениенияНаСервере();
	Закрыть();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ПрименитьИзмениенияНаСервере()
	НовыеСвязи = Новый Массив();
	Для Каждого Строка Из СвязанныеЗадачи Цикл
		НовыеСвязи.Добавить(Строка.Задача);
	КонецЦикла;
	
	//НовыеСвязи = ОбщегоНазначения.ТаблицаЗначенийВМассив(СвязанныеЗадачи);
	
	ОсновнаяЗадача = Список.Параметры.Элементы.Найти("ОсновнаяЗадача").Значение;		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Центр_СвязанныеЗадачи.Задача2 КАК Задача
		|ИЗ
		|	РегистрСведений.Центр_СвязанныеЗадачи КАК Центр_СвязанныеЗадачи
		|ГДЕ
		|	Центр_СвязанныеЗадачи.Задача1 = &ОсновнаяЗадача
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Центр_СвязанныеЗадачи.Задача1
		|ИЗ
		|	РегистрСведений.Центр_СвязанныеЗадачи КАК Центр_СвязанныеЗадачи
		|ГДЕ
		|	Центр_СвязанныеЗадачи.Задача2 = &ОсновнаяЗадача";
	
	Запрос.УстановитьПараметр("ОсновнаяЗадача", ОсновнаяЗадача);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗадачиКУдалению = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		СоответствующаяЗапись = НовыеСвязи.Найти(Выборка.Задача);
		
		Если СоответствующаяЗапись <> Неопределено Тогда
			НовыеСвязи.Удалить(СоответствующаяЗапись);	
		Иначе
			ЗадачиКУдалению.Добавить(Выборка.Задача);	
		КонецЕсли;
	КонецЦикла;
	
	Набор = РегистрыСведений.Центр_СвязанныеЗадачи.СоздатьНаборЗаписей();
	Набор.Записывать = Истина;
	Набор.Отбор.Задача2.Установить(ОсновнаяЗадача);
	Набор.Прочитать();
	
	Для Каждого СтрокаНабора Из Набор Цикл
		Если ЗадачиКУдалению.Найти(СтрокаНабора.Задача1) <> Неопределено Тогда
			Набор.Удалить(СтрокаНабора);
		КонецЕсли;
	КонецЦикла;
	
	Набор.Отбор.Сбросить();
	Набор.Отбор.Задача1.Установить(ОсновнаяЗадача);
	Набор.Прочитать();
	
	Для Каждого СтрокаНабора Из Набор Цикл
		Если ЗадачиКУдалению.Найти(СтрокаНабора.Задача2) <> Неопределено Тогда
			Набор.Удалить(СтрокаНабора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Задача Из НовыеСвязи Цикл
		НоваяЗапись = Набор.Добавить();
		НоваяЗапись.Задача1 = ОсновнаяЗадача;
		НоваяЗапись.Задача2 = Задача;
		НоваяЗапись.Период = ТекущаяДатаСеанса();
	КонецЦикла;
	
	Набор.Записать();
КонецПроцедуры

#КонецОбласти

//@skip-check module-structure-top-region
#Область ОбработчикиСобытийЭлементовФормы

//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДобавитьСвязаннуюЗадачу(ВыбраннаяСтрока);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура СвязанныеЗадачиПриИзменении(Элемент)
	ОбновитьПараметрСвязанныеЗадачи();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура СвязанныеЗадачиЗадачаПриИзменении(Элемент)
	ОбновитьПараметрСвязанныеЗадачи();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура СвязанныеЗадачиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Для Каждого ЗадачаПеретаскивания Из ПараметрыПеретаскивания.Значение Цикл
		ДобавитьСвязаннуюЗадачу(ЗадачаПеретаскивания);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

//@skip-check module-structure-top-region
#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПараметрСвязанныеЗадачи()
	МассивЗадач = Новый Массив();
	Для Каждого Строка Из СвязанныеЗадачи Цикл
		МассивЗадач.Добавить(Строка.Задача);
	КонецЦикла;
	
	Список.Параметры.УстановитьЗначениеПараметра("СписокЗадач", МассивЗадач);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСвязаннуюЗадачу(Задача)
	НоваяЗадача = СвязанныеЗадачи.Добавить();
	НоваяЗадача.Задача = Задача;
	
	ОбновитьПараметрСвязанныеЗадачи();
КонецПроцедуры

#КонецОбласти