#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ОписаниеЗадачи=Новый ХранилищеЗначения(ОписаниеЗадачиДокумент);
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.ЭтоДень Тогда
		ЕдиницаИзмерения = Перечисления.Центр_ЕдиницыИзмеренийВремени.День;
	Иначе
		ЕдиницаИзмерения = Перечисления.Центр_ЕдиницыИзмеренийВремени.Час;
	КонецЕсли;
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ОписаниеЗадачиДокумент = ДокОбъект.ОписаниеЗадачи.Получить();
	
	Центр_ОбработкаТриггеров.ТриггерПросмотрИсполнителем(ДокОбъект.Ссылка);
	
	ОтобразитьЧат();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ОбновитьВидимостьКнопкиВзятияЗадачи();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |    Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
    |ИЗ
    |    РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача) КАК Центр_ИсполнителиЗадачСрезПоследних";

    Запрос.УстановитьПараметр("Задача", ТекущийОбъект.Ссылка);

    РезультатЗапроса = Запрос.Выполнить();

    Выборка = РезультатЗапроса.Выбрать();

    Если Не РезультатЗапроса.Пустой() Тогда
        Если Выборка.Следующий() Тогда
            Если Исполнитель <> Выборка.Исполнитель Тогда
                МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
                МенеджерЗаписи.Исполнитель = Исполнитель;
                МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
                МенеджерЗаписи.Период = ТекущаяДатаСеанса();
                МенеджерЗаписи.Записать();
            КонецЕсли;
        КонецЕсли;
    Иначе
        МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
        МенеджерЗаписи.Исполнитель = Исполнитель;
        МенеджерЗаписи.Период = ТекущаяДатаСеанса();
        МенеджерЗаписи.Записать();
    КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВидЗадачиПриИзменении(Элемент)
	Объект.Постановщик = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПостановщикНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПостановщикНачалоВыбораНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ЕдиницаИзмеренияПриИзмененииНаСервере();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ЕдиницаИзмеренияПриИзмененииНаСервере()
	Если Объект.ЭтоДень Тогда
		Объект.ЭтоДень = Ложь;
	Иначе
		Объект.ЭтоДень = Истина;		
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

//@skip-check module-structure-top-region
#Область ОбработчикиСобытийЭлементовФОрмы
&НаСервере
Процедура ПостановщикНачалоВыбораНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_ВидыЗадач.Партнер
	|ИЗ
	|	Справочник.Центр_ВидыЗадач КАК Центр_ВидыЗадач
	|ГДЕ
	|	Центр_ВидыЗадач.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Объект.ВидЗадачи);

	РезультатЗапроса = Запрос.Выполнить();
	
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Если ВыборкаДетальныеЗаписи.Партнер Тогда
			Элементы.Постановщик.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Центр_Партнеры");
		Иначе
			Элементы.Постановщик.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Пользователи");	
		КонецЕсли;
	КонецЕсли;
	

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыбратьСвязанныеЗадачи(Команда)
	
	ПараметрыФормы = Новый Структура("ОсновнаяЗадача", Объект.Ссылка);
	ОткрытьФорму("Документ.Центр_Задача.Форма.ФормаПодбораСвязанных", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОтправитьНаСервере();
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запишите документ");
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьВопросы(Команда)
	ПараметрыФормы = Новый Структура("ОсновнаяЗадача", Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.ФормаСпискаВопросовПоЗадаче", ПараметрыФормы);
КонецПроцедуры 


&НаКлиенте
Процедура ЗабратьЗадачу(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Задача", Объект.Ссылка);
		ПараметрыФормы.Вставить("ЭтоДень", Объект.ЭтоДень);
		ПараметрыФормы.Вставить("Дедлайн", Объект.Дедлайн);
		ПараметрыФормы.Вставить("Длительность", Объект.Длительность);
		ОбработкаПолслеВзятияЗадачи = новый ОписаниеОповещения("ПолслеВзятияЗадачи",ЭтотОбъект);
		ОткрытьФорму("Документ.Центр_Задача.Форма.ФормаПодтвержденияВзятияЗадачи",ПараметрыФормы,,,,,ОбработкаПолслеВзятияЗадачи);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запишите документ");
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ПолслеВзятияЗадачи(Результат,ДополнительныеПараметры) экспорт
	Прочитать();
КонецПроцедуры



//@skip-check module-structure-top-region
#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВидимостьКнопкиВзятияЗадачи()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Центр_ГруппыДоступаКЗадачамПользователи.Пользователь = &ТекущийПользователь
	|			ТОГДА Центр_ГруппыДоступаКЗадачамПользователи.Пользователь
	|	КОНЕЦ КАК Пользователь,
	|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
	|ИЗ
	|	РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача) КАК Центр_ИсполнителиЗадачСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Центр_ГруппыДоступаКЗадачам.Пользователи КАК Центр_ГруппыДоступаКЗадачамПользователи
	|		ПО Центр_ИсполнителиЗадачСрезПоследних.Исполнитель = Центр_ГруппыДоступаКЗадачамПользователи.Ссылка
	|СГРУППИРОВАТЬ ПО
	|	Центр_ГруппыДоступаКЗадачамПользователи.Пользователь,
	|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель,
	|	ВЫБОР
	|		КОГДА Центр_ГруппыДоступаКЗадачамПользователи.Пользователь = &ТекущийПользователь
	|			ТОГДА Центр_ГруппыДоступаКЗадачамПользователи.Пользователь
	|	КОНЕЦ";

	Запрос.УстановитьПараметр("Задача", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.АвторизованныйПользователь());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	
	Элементы.ФормаЗабратьЗадачу.Видимость=Ложь;
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.Исполнитель) Тогда
			Исполнитель = Выборка.Исполнитель;
			Если ЗначениеЗаполнено(Выборка.Пользователь) Тогда
				Элементы.ФормаЗабратьЗадачу.Видимость=Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	МенеджерЗаписи = РегистрыСведений.Центр_КомментарииЗадач.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Автор = Пользователи.АвторизованныйПользователь();
	МенеджерЗаписи.Задача = Объект.Ссылка;
	МенеджерЗаписи.Комментарий = Новый ХранилищеЗначения(Комментарий);
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	
	МенеджерЗаписи.Записать();

	Комментарий.Удалить();
	ОтобразитьЧат();
КонецПроцедуры

&НаСервере
Процедура ОтобразитьЧат()
	Если КоличествоКомментариев > 0 Тогда
		Для к = 1 По КоличествоКомментариев Цикл
			Центр_ЭлементыФормы.УдлРеквизитИЭлемент(ЭтотОбъект, "Комментарий" + к);
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_КомментарииЗадач.Автор,
	|	Центр_КомментарииЗадач.Комментарий,
	|	Центр_КомментарииЗадач.Период КАК Период
	|ИЗ
	|	РегистрСведений.Центр_КомментарииЗадач КАК Центр_КомментарииЗадач
	|ГДЕ
	|	Центр_КомментарииЗадач.Задача = &Задача
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";

	Запрос.УстановитьПараметр("Задача", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	КоличествоКомментариев = Выборка.Количество();

	Индекс=1;

	ТекущийПользователь = Пользователи.АвторизованныйПользователь();


	Пока Выборка.Следующий() Цикл
		Центр_ЭлементыФормы.СоздатьРеквизит(ЭтотОбъект, "Комментарий" + Индекс,
			Новый ОписаниеТипов("ФорматированныйДокумент"));

		СтруктураСвойств = Новый структура;
		СтруктураСвойств.Вставить("ТолькоПросмотр", Истина);
		СтруктураСвойств.Вставить("Высота", 5);
		СтруктураСвойств.Вставить("Ширина", 70);
		СтруктураСвойств.Вставить("РастягиватьПоГоризонтали", Ложь);
		Если Выборка.Автор=ТекущийПользователь тогда
			СтруктураСвойств.Вставить("ГоризонтальноеПоложениеВГруппе", ГоризонтальноеПоложениеЭлемента.Право);
		иначе
			СтруктураСвойств.Вставить("ГоризонтальноеПоложениеВГруппе", ГоризонтальноеПоложениеЭлемента.Лево);
		КонецЕсли;
		ЗаголовокКомментария = Строка(Выборка.Автор) + " " + Выборка.Период;
		Центр_ЭлементыФормы.СздПоле(ЭтотОбъект, "Комментарий" + Индекс, Элементы.Комментарии, ЗаголовокКомментария, ,
			"Комментарий" + Индекс, СтруктураСвойств);
		ЭтотОбъект["Комментарий" + Индекс] = Выборка.Комментарий.Получить();
		Индекс=Индекс + 1;
	КонецЦикла;

КонецПроцедуры


#КонецОбласти


#КонецОбласти