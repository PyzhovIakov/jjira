#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ОписаниеЗадачи=Новый ХранилищеЗначения(ОписаниеЗадачиДокумент);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
	|ИЗ
	|	РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача) КАК Центр_ИсполнителиЗадачСрезПоследних";

	Запрос.УстановитьПараметр("Задача", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Если Не РезультатЗапроса.Пустой() Тогда
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.Исполнитель) Тогда
				Если Исполнитель <> Выборка.Исполнитель Тогда
					МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.Исполнитель  = Исполнитель;
					МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
					МенеджерЗаписи.Период = ТекущаяДатаСеанса();
					МенеджерЗаписи.Записать();
				КонецЕсли;
			Иначе
				Если Исполнитель <> Выборка.Исполнитель Тогда
					МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
					МенеджерЗаписи.Исполнитель  = Исполнитель;
					МенеджерЗаписи.Период = ТекущаяДатаСеанса();
					МенеджерЗаписи.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
		МенеджерЗаписи.Исполнитель  = Исполнитель;
		МенеджерЗаписи.Период = ТекущаяДатаСеанса();
		МенеджерЗаписи.Записать();
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ОписаниеЗадачиДокумент = ДокОбъект.ОписаниеЗадачи.Получить();
	СписокКомментарии.Параметры.УстановитьЗначениеПараметра("ТекушаяЗадача", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
	|ИЗ
	|	РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача) КАК Центр_ИсполнителиЗадачСрезПоследних";

	Запрос.УстановитьПараметр("Задача", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.Исполнитель) Тогда
			Исполнитель = Выборка.Исполнитель;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

//@skip-check module-structure-top-region
#Область ОбработчикиСобытийЭлементовФОрмы
&НаКлиенте
Процедура ПостановщикНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПостановщикНачалоВыбораНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПостановщикНачалоВыбораНаСервере()
	Если Объект.ВидЗадачи = ПредопределенноеЗначение("Справочник.Центр_ВидыЗадач.Внешняя") Тогда
		Элементы.Постановщик.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Центр_Партнеры");
	Иначе
		Элементы.Постановщик.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыбратьСвязанныеЗадачи(Команда)

	ПараметрыФормы = Новый Структура("ОсновнаяЗадача", Объект.Ссылка);
	ОткрытьФорму("Документ.Центр_Задача.Форма.ФормаПодбораСвязанных", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОтправитьНаСервере();
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запишите документ");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	МенеджерЗаписи = РегистрыСведений.Центр_КомментарииЗадач.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Автор = Пользователи.АвторизованныйПользователь();
	МенеджерЗаписи.Задача = Объект.Ссылка;
	МенеджерЗаписи.Комментарий = Комментарий;
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();

	МенеджерЗаписи.Записать();
	Элементы.СписокКомментарии.Обновить();
	Комментарий = "";
КонецПроцедуры

#КонецОбласти

//@skip-check module-structure-top-region
#Область ВспомогательныеПроцедурыИФункции

#КонецОбласти