#Область ОбработчикиСобытийФормы
  &НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ОписаниеЗадачи=новый ХранилищеЗначения(ОписаниеЗадачиДокумент);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокКомментарии.Параметры.УстановитьЗначениеПараметра("ТекушаяЗадача", Объект.Ссылка);
КонецПроцедуры
#КонецОбласти


&НаКлиенте
Процедура ПостановщикНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПостановщикНачалоВыбораНаСервере();
КонецПроцедуры


//@skip-check module-structure-top-region
#Область ОбработчикиСобытийЭлементовФОрмы

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыбратьСвязанныеЗадачи(Команда)
	
	ПараметрыФормы = Новый Структура("ОсновнаяЗадача", Объект.Ссылка);
	ОткрытьФорму("Документ.Центр_Задача.Форма.ФормаПодбораСвязанных", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере();
КонецПроцедуры
#КонецОбласти
&НаСервере
Процедура ОтправитьНаСервере()
	МенеджерЗаписи = РегистрыСведений.Центр_КомментарииЗадач.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Автор = Пользователи.АвторизованныйПользователь();
	МенеджерЗаписи.Задача = Объект.Ссылка;
	МенеджерЗаписи.Комментарий = Комментарий;
	МенеджерЗаписи.Период = ТекущаяДатаСеанса();
	
	МенеджерЗаписи.Записать();
	Элементы.СписокКомментарии.Обновить();
	Комментарий = "";
КонецПроцедуры



&НаСервере
Процедура ПостановщикНачалоВыбораНаСервере()
	Если Объект.ВидЗадачи = ПредопределенноеЗначение("Справочник.Центр_ВидыЗадач.Внешняя") Тогда
		Элементы.Постановщик.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Центр_Партнеры"); 
	Иначе
		Элементы.Постановщик.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Пользователи"); 
	КонецЕсли;
КонецПроцедуры


//@skip-check module-structure-top-region
#Область ВспомогательныеПроцедурыИФункции

#КонецОбласти