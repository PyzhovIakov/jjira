#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПараметрГлавная = Неопределено;
	Если Параметры.Свойство("ГлавнаяЗадача", ПараметрГлавная) Тогда
		Объект.ГлавнаяЗадача = ПараметрГлавная;
	КонецЕсли;
	
	ПараметрИсточникПараметров = Неопределено;
	Если Параметры.Свойство("ИсточникПараметров", ПараметрИсточникПараметров) Тогда
		ИсточникПараметров = ПараметрИсточникПараметров;
		Центр_ОбработчикиФормыЗадачиСервер.ЗаполнитьНаследуемыеПараметры(ЭтотОбъект, ПараметрИсточникПараметров);
	КонецЕсли;
	
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	// Триггер
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Центр_ОбработчикиФормыЗадачиСервер.ЗаполнитьПользовательскиеНастройки(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("НеСохранять") Тогда
		Отказ = Истина;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры



&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |    Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
    |ИЗ
    |    РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача) КАК Центр_ИсполнителиЗадачСрезПоследних";

    Запрос.УстановитьПараметр("Задача", ТекущийОбъект.Ссылка);

    РезультатЗапроса = Запрос.Выполнить();

    Выборка = РезультатЗапроса.Выбрать();

    Если Не РезультатЗапроса.Пустой() Тогда
        Если Выборка.Следующий() Тогда
            Если Исполнитель <> Выборка.Исполнитель Тогда
                МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
                МенеджерЗаписи.Исполнитель = Исполнитель;
                МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
                МенеджерЗаписи.Период = ТекущаяДатаСеанса();
                МенеджерЗаписи.Записать();
            КонецЕсли;
        КонецЕсли;
    Иначе
        МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
        МенеджерЗаписи.Исполнитель = Исполнитель;
        МенеджерЗаписи.Период = ТекущаяДатаСеанса();
        МенеджерЗаписи.Записать();
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ОписаниеЗадачи = Новый ХранилищеЗначения(ОписаниеЗадачиДокумент);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОткрытьПолнуюФорму(Команда)
	АдресОписанияЗадачи = ПоместитьВоВременноеХранилище(ОписаниеЗадачиДокумент);
	
	ПараметрыФормы = Новый Структура("НаименованиеЗадачи,ГлавнаяЗадача,ИсточникПараметров,ОписаниеЗадачи",
		Объект.Наименование, Объект.ГлавнаяЗадача, ИсточникПараметров, АдресОписанияЗадачи);
		
	ФормаДок = ПолучитьФорму("Документ.Центр_Задача.Форма.ФормаДокумента", ПараметрыФормы);
	
	Если ЗначениеЗаполнено(ОписаниеОповещенияОЗакрытии) Тогда
		ДанныеФормы = ФормаДок.Объект;
		
		ПараметрыДоп = Новый Структура("ФормаДок", ФормаДок);
		НовыйООЗ = Новый ОписаниеОповещения(ОписаниеОповещенияОЗакрытии.ИмяПроцедуры, ОписаниеОповещенияОЗакрытии.Модуль, 
			ПараметрыДоп);
	
		СоздатьГлавнуюЗадачуНаСервере(ДанныеФормы);
		ФормаДок.ОписаниеОповещенияОЗакрытии = НовыйООЗ;
	КонецЕсли;

	ФормаДок.Открыть();

	ОписаниеОповещенияОЗакрытии = Неопределено;
	ПараметрыЗакрытия = Новый Структура("НеСохранять", Истина);
	//@skip-check invocation-form-event-handler
	ПередЗаписью(Ложь, ПараметрыЗакрытия);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция СоздатьГлавнуюЗадачуНаСервере(ДанныеФормы)	
	Док = Документы.Центр_Задача.СоздатьДокумент();
	Док.УстановитьСсылкуНового(Объект.Ссылка);
	ЗначениеВДанныеФормы(Док, ДанныеФормы);
	Возврат  Объект.Ссылка; 
КонецФункции
#КонецОбласти