#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПараметрГлавная = Неопределено;
	Если Параметры.Свойство("ГлавнаяЗадача", ПараметрГлавная) Тогда
		Объект.ГлавнаяЗадача = ПараметрГлавная;
	КонецЕсли;
	
	ПараметрИсточникПараметров = Неопределено;
	Если Параметры.Свойство("ИсточникПараметров", ПараметрИсточникПараметров) Тогда
		ИсточникПараметров = ПараметрИсточникПараметров;
		Центр_ОбработчикиФормыЗадачиСервер.ЗаполнитьНаследуемыеПараметры(ЭтотОбъект, ПараметрИсточникПараметров);
	КонецЕсли;
	
	ЗагрузитьЦветаМеток();
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Центр_ОбработкаТриггеров.ТриггерПросмотрИсполнителем(ДокОбъект.Ссылка);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Центр_ОбработчикиФормыЗадачиСервер.ЗаполнитьПользовательскиеНастройки(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("НеСохранять") Тогда
		Отказ = Истина;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |    Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
    |ИЗ
    |    РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Задача) КАК Центр_ИсполнителиЗадачСрезПоследних";

    Запрос.УстановитьПараметр("Задача", ТекущийОбъект.Ссылка);

    РезультатЗапроса = Запрос.Выполнить();

    Выборка = РезультатЗапроса.Выбрать();

    Если Не РезультатЗапроса.Пустой() Тогда
        Если Выборка.Следующий() Тогда
            Если Исполнитель <> Выборка.Исполнитель Тогда
                МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
                МенеджерЗаписи.Исполнитель = Исполнитель;
                МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
                МенеджерЗаписи.Период = ТекущаяДатаСеанса();
                МенеджерЗаписи.Записать();
            КонецЕсли;
        КонецЕсли;
    Иначе
        МенеджерЗаписи = РегистрыСведений.Центр_ИсполнителиЗадач.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Задача = ТекущийОбъект.Ссылка;
        МенеджерЗаписи.Исполнитель = Исполнитель;
        МенеджерЗаписи.Период = ТекущаяДатаСеанса();
        МенеджерЗаписи.Записать();
    КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура МеткиПриИзменении(Элемент)
	ЗагрузитьЦветаМеток();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОткрытьПолнуюФорму(Команда)
	МассивМеток = Новый Массив;
	Для Каждого Метка Из Объект.Метки Цикл
		МассивМеток.Добавить(Метка.Метка);
	КонецЦикла;
	
	//@skip-check structure-consructor-too-many-keys
	ПараметрыФормы = Новый Структура("НаименованиеЗадачи,МеткиЗадачи,ГлавнаяЗадача,ИсточникПараметров", Объект.Наименование, МассивМеток, Объект.ГлавнаяЗадача, ИсточникПараметров);
	ОткрытьФорму("Документ.Центр_Задача.Форма.ФормаДокумента", ПараметрыФормы);
	
	ПараметрыЗакрытия = Новый Структура("НеСохранять", Истина);
	//@skip-check invocation-form-event-handler
	ПередЗаписью(Ложь, ПараметрыЗакрытия);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Метки
&НаСервере
Процедура ЗагрузитьЦветаМеток()
	ОчиститьОформлениеМеток();
	
	Для Каждого Метка Из Объект.Метки Цикл
		Цвет = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Метка.Метка, "ЦветRGB");
		
		Если ЗначениеЗаполнено(Цвет) Тогда
			Фон = СтрРазделить(Цвет, ",");
			
			ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	    	ЭлементОформления.Использование = Истина;
	    	//@skip-check new-color
	    	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(Фон[0], Фон[1], Фон[2]));
			
			ЭлементУсловия                = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		    ЭлементУсловия.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Метки.Метка");
		    ЭлементУсловия.ПравоеЗначение = Метка.Метка;
		    ЭлементУсловия.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;   
		    ЭлементУсловия.Использование  = Истина;
		    
		    ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
		    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Метки");
	    КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОчиститьОформлениеМеток() 
	МассивКУдалению = Новый Массив;
	Для Каждого Настройка Из УсловноеОформление.Элементы Цикл
		Если Настройка.Отбор.Элементы[0].ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Метки.Метка")
			И Настройка.Отбор.Элементы[0].ВидСравнения = ВидСравненияКомпоновкиДанных.Равно
			И Настройка.Поля.Элементы[0].Поле = Новый ПолеКомпоновкиДанных("Метки")
			И Настройка.Оформление.Элементы[0].Параметр = Новый ПараметрКомпоновкиДанных("ЦветФона") Тогда
			МассивКУдалению.Добавить(Настройка);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Настрйока Из МассивКУдалению Цикл
		УсловноеОформление.Элементы.Удалить(Настрйока);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти
#КонецОбласти