
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОсновнаяЗадача = Неопределено;
	Если Параметры.Свойство("ОсновнаяЗадача", ОсновнаяЗадача) Тогда
		Задача = ОсновнаяЗадача;
		СписокДоступныхАдресатов = АдресатыВыбраннойЗадачи();
	
		Для Каждого АдресатСписка Из СписокДоступныхАдресатов Цикл
			Элементы.Адресат.СписокВыбора.Добавить(АдресатСписка);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОтправитьВопрос(Команда)
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Задача) Тогда
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не выбрана задача";
		Сообщение.Поле = "Задача";
		Сообщение.Сообщить();
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Адресат) Тогда
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не выбран адресат";
		Сообщение.Поле = "Адресат";
		Сообщение.Сообщить();
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ТекстНовогоВопроса) Тогда
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Введите текст вопроса";
		Сообщение.Поле = "ТекстНовогоВопроса";
		Сообщение.Сообщить();
	КонецЕсли;	
	
	Если Не Отказ Тогда
		ОтправитьВопросНаСервере();
		Центр_ОбработкаТриггеров.ТриггерВопросПоЗадаче(Задача);
		Закрыть();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

//@skip-check module-structure-top-region
#Область ОбработчикиСобытийЭлементоыФормы
//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура ЗадачаПриИзменении(Элемент)
	СписокДоступныхАдресатов = АдресатыВыбраннойЗадачи();
	
	Для Каждого АдресатСписка Из СписокДоступныхАдресатов Цикл
		Элементы.Адресат.СписокВыбора.Добавить(АдресатСписка);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

//@skip-check module-structure-top-region
#Область ВспомогательныеПроцедурыИФункции
&НаСервере
Функция АдресатыВыбраннойЗадачи()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Центр_ЗадачаНаблюдатели.Пользовалель КАК Пользователь
		|ПОМЕСТИТЬ вт_НесгруппированныеПользователи
		|ИЗ
		|	Документ.Центр_Задача.Наблюдатели КАК Центр_ЗадачаНаблюдатели
		|ГДЕ
		|	Центр_ЗадачаНаблюдатели.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	Центр_ЗадачаНаблюдатели.Пользовалель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
		|ИЗ
		|	РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Ссылка
		|	И Исполнитель ССЫЛКА Справочник.Пользователи) КАК Центр_ИсполнителиЗадачСрезПоследних
		|СГРУППИРОВАТЬ ПО
		|	Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Центр_Задача.Автор
		|ИЗ
		|	Документ.Центр_Задача КАК Центр_Задача
		|ГДЕ
		|	Центр_Задача.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	Центр_Задача.Автор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Центр_Задача.Постановщик ССЫЛКА Справочник.Пользователи
		|			ТОГДА Центр_Задача.Постановщик
		|	КОНЕЦ
		|ИЗ
		|	Документ.Центр_Задача КАК Центр_Задача
		|ГДЕ
		|	Центр_Задача.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА Центр_Задача.Постановщик ССЫЛКА Справочник.Пользователи
		|			ТОГДА Центр_Задача.Постановщик
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Центр_ГруппыДоступаКЗадачамПользователи.Пользователь
		|ИЗ
		|	РегистрСведений.Центр_ИсполнителиЗадач.СрезПоследних(, Задача = &Ссылка
		|	И Исполнитель ССЫЛКА Справочник.Центр_ГруппыДоступаКЗадачам) КАК Центр_ИсполнителиЗадачСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Центр_ГруппыДоступаКЗадачам.Пользователи КАК Центр_ГруппыДоступаКЗадачамПользователи
		|		ПО Центр_ГруппыДоступаКЗадачамПользователи.Пользователь = Центр_ИсполнителиЗадачСрезПоследних.Исполнитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_НесгруппированныеПользователи.Пользователь
		|ИЗ
		|	вт_НесгруппированныеПользователи КАК вт_НесгруппированныеПользователи
		|СГРУППИРОВАТЬ ПО
		|	вт_НесгруппированныеПользователи.Пользователь";
	
	Запрос.УстановитьПараметр("Ссылка", Задача);
	
	Выборка =  Запрос.Выполнить().Выбрать();
	
	МассивКандидатов = Новый Массив();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Пользователь) И Выборка.Пользователь <> Пользователи.АвторизованныйПользователь() Тогда
			МассивКандидатов.Добавить(Выборка.Пользователь);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивКандидатов;
КонецФункции

&НаСервере
Процедура ОтправитьВопросНаСервере()
	МенеджерЗаписи = РегистрыСведений.Центр_ВопросыПоЗадачам.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Адресат = Адресат;
	МенеджерЗаписи.Задача = Задача;
	МенеджерЗаписи.Отправитель = ПараметрыСеанса.ТекущийПользователь;
	МенеджерЗаписи.Дата = ТекущаяДатаСеанса();
	МенеджерЗаписи.ТекстВопроса = ТекстНовогоВопроса;
	МенеджерЗаписи.ВидВопроса = Перечисления.Центр_ВидыВопросов.Вопрос;
	МенеджерЗаписи.Записать();
КонецПроцедуры
#КонецОбласти
